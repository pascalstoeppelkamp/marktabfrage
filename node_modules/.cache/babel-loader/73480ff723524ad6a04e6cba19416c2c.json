{"ast":null,"code":"var _jsxFileName = \"/Users/pascalstoppelkamp/develop/React/marktabfrage/src/components/Main/Pages/index.js\";\nimport React, { Component } from 'react';\nimport { Box, Button, Tab, Tabs, AppBar } from '@material-ui/core';\nimport ServerUtils from '../../../utils/ServerUtils';\nimport TabHandler from '../TabHandler';\nimport computerSize from './computerSize';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst styles = {\n  email: {\n    justifyContent: 'flex-start',\n    flex: 1,\n    display: 'flex',\n    alignItems: 'flex-end'\n  },\n  logoutBtn: {\n    justifyContent: 'flex-end',\n    flex: 1,\n    display: 'flex'\n  },\n  appBar: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    backgroundColor: 'rgb(106, 172, 69)'\n  }\n};\nexport default class index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.checkIfPhone = () => {\n      let {\n        phoneSize\n      } = this.state;\n\n      if (window.innerWidth < 699) {\n        phoneSize = true;\n      }\n\n      this.setState({\n        phoneSize\n      });\n    };\n\n    this._Logout = async () => {\n      await this.ServerUtils.logout();\n    };\n\n    this._Login = () => {\n      this.props.pressedLogin();\n    };\n\n    this.handleChange = (event, newValue) => {\n      this.setState({\n        value: newValue\n      });\n    };\n\n    this.ServerUtils = new ServerUtils();\n    this.state = {\n      value: 0,\n      phoneSize: false\n    };\n  }\n\n  componentDidMount() {\n    this.checkIfPhone();\n  }\n\n  render() {\n    let {\n      username,\n      userRole,\n      fnb\n    } = this.props;\n    let {\n      value,\n      phoneSize\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [phoneSize ? null : /*#__PURE__*/_jsxDEV(\"computerSize\", {\n        username: username,\n        userRole: userRole,\n        fnb: fnb,\n        value: value,\n        phoneSize: phoneSize,\n        handleChange: this.handleChange,\n        logout: this._Logout,\n        login: this._Login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n      /* <AppBar position=\"static\" style={styles.appBar}>\n        <Tabs\n          variant=\"scrollable\"\n          style={{\n            width: '100%',\n            display: 'flex',\n            overflow: 'hidden',\n          }}\n          value={value}\n          onChange={this.handleChange}\n        >\n          <Tab label=\"Einleitung\" />\n          <Tab label=\"Formular\" />\n          <Tab label=\"Anleitung\" />\n           {userRole === 'user' || userRole === 'admin' ? (\n            <Tab label=\"Verwaltung\" />\n          ) : null}\n        </Tabs>\n        {username ? (\n          <Box\n            style={{\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              display: 'flex',\n            }}\n          >\n            <Box style={styles.email}>\n              <p\n                style={{\n                  fontFamily: 'sans-serif',\n                  fontSize: 14,\n                  margin: 10,\n                }}\n              >\n                {phoneSize ? null : username}\n              </p>\n            </Box>\n            <Box style={styles.logoutBtn}>\n              <Button onClick={this._Logout}>Logout</Button>\n            </Box>\n          </Box>\n        ) : (\n          <Box style={styles.logoutBtn}>\n            <Button onClick={this._Login}>Login</Button>\n          </Box>\n        )}\n      </AppBar> */\n      , /*#__PURE__*/_jsxDEV(TabHandler, {\n        value: value,\n        index: 0,\n        fnb: fnb\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/pascalstoppelkamp/develop/React/marktabfrage/src/components/Main/Pages/index.js"],"names":["React","Component","Box","Button","Tab","Tabs","AppBar","ServerUtils","TabHandler","computerSize","styles","email","justifyContent","flex","display","alignItems","logoutBtn","appBar","flexDirection","backgroundColor","index","constructor","props","checkIfPhone","phoneSize","state","window","innerWidth","setState","_Logout","logout","_Login","pressedLogin","handleChange","event","newValue","value","componentDidMount","render","username","userRole","fnb"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Box, Button, Tab, Tabs, AppBar } from '@material-ui/core';\nimport ServerUtils from '../../../utils/ServerUtils';\nimport TabHandler from '../TabHandler';\nimport computerSize from './computerSize';\nconst styles = {\n  email: {\n    justifyContent: 'flex-start',\n    flex: 1,\n    display: 'flex',\n    alignItems: 'flex-end',\n  },\n  logoutBtn: {\n    justifyContent: 'flex-end',\n    flex: 1,\n    display: 'flex',\n  },\n  appBar: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    backgroundColor: 'rgb(106, 172, 69)',\n  },\n};\n\nexport default class index extends Component {\n  constructor(props) {\n    super(props);\n    this.ServerUtils = new ServerUtils();\n    this.state = {\n      value: 0,\n      phoneSize: false,\n    };\n  }\n\n  componentDidMount() {\n    this.checkIfPhone();\n  }\n\n  checkIfPhone = () => {\n    let { phoneSize } = this.state;\n    if (window.innerWidth < 699) {\n      phoneSize = true;\n    }\n    this.setState({ phoneSize });\n  };\n\n  _Logout = async () => {\n    await this.ServerUtils.logout();\n  };\n\n  _Login = () => {\n    this.props.pressedLogin();\n  };\n\n  handleChange = (event, newValue) => {\n    this.setState({ value: newValue });\n  };\n\n  render() {\n    let { username, userRole, fnb } = this.props;\n    let { value, phoneSize } = this.state;\n\n    return (\n      <>\n        {phoneSize ? null : (\n          <computerSize\n            username={username}\n            userRole={userRole}\n            fnb={fnb}\n            value={value}\n            phoneSize={phoneSize}\n            handleChange={this.handleChange}\n            logout={this._Logout}\n            login={this._Login}\n          />\n          /* <AppBar position=\"static\" style={styles.appBar}>\n            <Tabs\n              variant=\"scrollable\"\n              style={{\n                width: '100%',\n                display: 'flex',\n                overflow: 'hidden',\n              }}\n              value={value}\n              onChange={this.handleChange}\n            >\n              <Tab label=\"Einleitung\" />\n              <Tab label=\"Formular\" />\n              <Tab label=\"Anleitung\" />\n\n              {userRole === 'user' || userRole === 'admin' ? (\n                <Tab label=\"Verwaltung\" />\n              ) : null}\n            </Tabs>\n            {username ? (\n              <Box\n                style={{\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                  display: 'flex',\n                }}\n              >\n                <Box style={styles.email}>\n                  <p\n                    style={{\n                      fontFamily: 'sans-serif',\n                      fontSize: 14,\n                      margin: 10,\n                    }}\n                  >\n                    {phoneSize ? null : username}\n                  </p>\n                </Box>\n                <Box style={styles.logoutBtn}>\n                  <Button onClick={this._Logout}>Logout</Button>\n                </Box>\n              </Box>\n            ) : (\n              <Box style={styles.logoutBtn}>\n                <Button onClick={this._Login}>Login</Button>\n              </Box>\n            )}\n          </AppBar> */\n        )}\n\n        <TabHandler value={value} index={0} fnb={fnb} />\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}