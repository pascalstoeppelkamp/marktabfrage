{"ast":null,"code":"var _jsxFileName = \"/Users/pascalstoppelkamp/develop/React/marktabfrage/src/App.js\";\nimport React, { Component } from 'react';\nimport HeaderLogos from './components/HeaderLogos';\nimport HeaderLogin from './components/HeaderLogin';\nimport LoginModal from './components/LoginModal';\nimport Header from './components/Header';\nimport Form from './sites/Form';\nimport Site2 from './sites/Site2';\nimport { Box, Grid, Button } from '@material-ui/core';\nimport Table from './components/Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  container: {\n    height: '100vh',\n    width: '100%'\n  },\n  form: {\n    height: '100%',\n    width: '100%'\n  },\n  rightPage: {\n    height: '100%',\n    width: '100%'\n  }\n};\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchData = async (allData, tableData) => {\n      let data = {};\n\n      for (let item in allData) {\n        data[allData[item].id] = allData[item].value;\n      }\n      /*   for (let item in tableData) {\n        data.push(tableData[(item.label = tableData[item.value])]);\n      } */\n\n\n      await fetch('http://localhost:5000/api/v1/eintraege', {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(data => data = data.json()).then(data => console.log(data));\n    };\n\n    this.setAllData = data => {\n      let {\n        allData\n      } = this.state;\n      let {\n        id\n      } = data;\n      allData[id] = data;\n      this.setState({\n        allData\n      });\n    };\n\n    this.setTableData = data => {\n      let {\n        tableData\n      } = this.state;\n      let {\n        id\n      } = data;\n      tableData[id] = data;\n      this.setState({\n        tableData\n      });\n    };\n\n    this._Login = data => {\n      this.setState({\n        userToken: data.token,\n        username: data.username,\n        userRole: data.role\n      });\n    };\n\n    this.state = {\n      allData: {},\n      tableData: {},\n      userToken: null\n    };\n  }\n\n  render() {\n    let {\n      allData,\n      tableData,\n      userToken,\n      username,\n      userRole\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Box, {\n      style: styles.container,\n      children: [!userToken ? /*#__PURE__*/_jsxDEV(LoginModal, {\n        _Login: this._Login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 23\n      }, this) : null, userRole === 'admin' ? /*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(HeaderLogin, {\n          username: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(HeaderLogos, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              style: styles.form,\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                setAllData: this.setAllData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              style: styles.rightPage,\n              children: /*#__PURE__*/_jsxDEV(Site2, {\n                allData: this.setAllData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          style: {\n            marginTop: 20\n          },\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            tableData: this.setTableData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            height: 50,\n            width: 150,\n            background: 'grey',\n            margin: 10\n          },\n          onClick: () => this.fetchData(allData, tableData),\n          children: \"Senden\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/pascalstoppelkamp/develop/React/marktabfrage/src/App.js"],"names":["React","Component","HeaderLogos","HeaderLogin","LoginModal","Header","Form","Site2","Box","Grid","Button","Table","styles","container","height","width","form","rightPage","App","constructor","props","fetchData","allData","tableData","data","item","id","value","fetch","method","body","JSON","stringify","headers","then","json","console","log","setAllData","state","setState","setTableData","_Login","userToken","token","username","userRole","role","render","marginTop","background","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport HeaderLogos from './components/HeaderLogos';\nimport HeaderLogin from './components/HeaderLogin';\nimport LoginModal from './components/LoginModal';\nimport Header from './components/Header';\nimport Form from './sites/Form';\nimport Site2 from './sites/Site2';\nimport { Box, Grid, Button } from '@material-ui/core';\nimport Table from './components/Table';\nconst styles = {\n  container: {\n    height: '100vh',\n    width: '100%',\n  },\n  form: {\n    height: '100%',\n    width: '100%',\n  },\n  rightPage: {\n    height: '100%',\n    width: '100%',\n  },\n};\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allData: {},\n      tableData: {},\n      userToken: null,\n    };\n  }\n\n  fetchData = async (allData, tableData) => {\n    let data = {};\n    for (let item in allData) {\n      data[allData[item].id] = allData[item].value;\n    }\n    /*   for (let item in tableData) {\n      data.push(tableData[(item.label = tableData[item.value])]);\n    } */\n    await fetch('http://localhost:5000/api/v1/eintraege', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((data) => (data = data.json()))\n      .then((data) => console.log(data));\n  };\n\n  setAllData = (data) => {\n    let { allData } = this.state;\n    let { id } = data;\n    allData[id] = data;\n    this.setState({ allData });\n  };\n\n  setTableData = (data) => {\n    let { tableData } = this.state;\n    let { id } = data;\n    tableData[id] = data;\n    this.setState({ tableData });\n  };\n\n  _Login = (data) => {\n    this.setState({\n      userToken: data.token,\n      username: data.username,\n      userRole: data.role,\n    });\n  };\n\n  render() {\n    let { allData, tableData, userToken, username, userRole } = this.state;\n    return (\n      <Box style={styles.container}>\n        {!userToken ? <LoginModal _Login={this._Login} /> : null}\n        {userRole === 'admin' ? (\n          <Box />\n        ) : (\n          <Box>\n            <HeaderLogin username={username} />\n            <HeaderLogos />\n            <Header />\n            <Grid container spacing={3}>\n              <Grid item xs={12} sm={6}>\n                <Box style={styles.form}>\n                  <Form setAllData={this.setAllData} />\n                </Box>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Box style={styles.rightPage}>\n                  <Site2 allData={this.setAllData} />\n                </Box>\n              </Grid>\n            </Grid>\n\n            <Box style={{ marginTop: 20 }}>\n              <Table tableData={this.setTableData} />\n            </Box>\n            <Button\n              style={{ height: 50, width: 150, background: 'grey', margin: 10 }}\n              onClick={() => this.fetchData(allData, tableData)}\n            >\n              Senden\n            </Button>\n          </Box>\n        )}\n      </Box>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}