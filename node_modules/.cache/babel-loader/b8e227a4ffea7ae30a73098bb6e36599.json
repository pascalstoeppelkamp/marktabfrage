{"ast":null,"code":"var _jsxFileName = \"/Users/pascalstoppelkamp/develop/React/marktabfrage/src/components/Main/ShowAbfragen/index.js\";\nimport React, { Component } from 'react';\nimport { Button, Box } from '@material-ui/core';\nimport { ChevronRightOutlined } from '@material-ui/icons';\nimport ServerUtils from '../../../utils/ServerUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    height: '100%',\n    width: '100%'\n  },\n  btnContainer: {\n    height: 100,\n    borderColor: 'lightgreen',\n    borderStyle: 'solid',\n    margin: 20,\n    borderWidth: 0.5,\n    borderRadius: 10,\n    overflow: 'hidden'\n  },\n  btnBox: {\n    display: 'flex',\n    flex: 1,\n    flexWrap: 'wrap'\n  },\n  chevron: {\n    flex: 0.1,\n    display: 'flex',\n    justifyContent: 'flex-end'\n  }\n};\nexport default class index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.pressedContact = item => {\n      this.setState({\n        pressedData: item\n      });\n    };\n\n    this.getItems = item => {\n      let {\n        Name,\n        Email,\n        CompanyContact\n      } = item;\n      return /*#__PURE__*/_jsxDEV(Button, {\n        style: styles.btnContainer,\n        onClick: () => this.pressedContact(item),\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          style: styles.btnBox,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              flex: 1\n            },\n            children: 'Name: ' + Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              flex: 1\n            },\n            children: 'Email: ' + Email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              flex: 1\n            },\n            children: 'Ansprechpartner: ' + CompanyContact\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          style: styles.chevron,\n          children: /*#__PURE__*/_jsxDEV(ChevronRightOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.pressedData = data => {\n      let arr = [];\n\n      for (const [key, value] of Object.entries(data)) {\n        if (typeof value !== 'object' && key !== '_id' && key !== '__v') {\n          arr.push({\n            name: key,\n            value: value\n          });\n        }\n      }\n\n      return arr;\n    };\n\n    this.ServerUtils = new ServerUtils();\n    this.state = {\n      data: [],\n      pressedData: null\n    };\n  }\n\n  componentDidMount() {\n    this.showData();\n  }\n\n  async showData() {\n    const response = await this.ServerUtils.showAbfragen();\n\n    if (response.success) {\n      this.setState({\n        data: response.data\n      });\n    }\n  }\n\n  render() {\n    let {\n      data,\n      pressedData\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 1\n      },\n      children: data.map(item => this.getItems(item))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/pascalstoppelkamp/develop/React/marktabfrage/src/components/Main/ShowAbfragen/index.js"],"names":["React","Component","Button","Box","ChevronRightOutlined","ServerUtils","styles","container","display","flexDirection","height","width","btnContainer","borderColor","borderStyle","margin","borderWidth","borderRadius","overflow","btnBox","flex","flexWrap","chevron","justifyContent","index","constructor","props","pressedContact","item","setState","pressedData","getItems","Name","Email","CompanyContact","data","arr","key","value","Object","entries","push","name","state","componentDidMount","showData","response","showAbfragen","success","render","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Box } from '@material-ui/core';\nimport { ChevronRightOutlined } from '@material-ui/icons';\nimport ServerUtils from '../../../utils/ServerUtils';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    height: '100%',\n    width: '100%',\n  },\n  btnContainer: {\n    height: 100,\n    borderColor: 'lightgreen',\n    borderStyle: 'solid',\n    margin: 20,\n    borderWidth: 0.5,\n    borderRadius: 10,\n    overflow: 'hidden',\n  },\n  btnBox: {\n    display: 'flex',\n    flex: 1,\n    flexWrap: 'wrap',\n  },\n  chevron: {\n    flex: 0.1,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n};\n\nexport default class index extends Component {\n  constructor(props) {\n    super(props);\n    this.ServerUtils = new ServerUtils();\n    this.state = {\n      data: [],\n      pressedData: null,\n    };\n  }\n  componentDidMount() {\n    this.showData();\n  }\n\n  async showData() {\n    const response = await this.ServerUtils.showAbfragen();\n    if (response.success) {\n      this.setState({ data: response.data });\n    }\n  }\n\n  pressedContact = (item) => {\n    this.setState({ pressedData: item });\n  };\n\n  getItems = (item) => {\n    let { Name, Email, CompanyContact } = item;\n    return (\n      <Button\n        style={styles.btnContainer}\n        onClick={() => this.pressedContact(item)}\n      >\n        <Box style={styles.btnBox}>\n          <p style={{ flex: 1 }}>{'Name: ' + Name}</p>\n          <p style={{ flex: 1 }}>{'Email: ' + Email}</p>\n          <p style={{ flex: 1 }}>{'Ansprechpartner: ' + CompanyContact}</p>\n        </Box>\n        <Box style={styles.chevron}>\n          <ChevronRightOutlined />\n        </Box>\n      </Button>\n    );\n  };\n\n  pressedData = (data) => {\n    let arr = [];\n    for (const [key, value] of Object.entries(data)) {\n      if (typeof value !== 'object' && key !== '_id' && key !== '__v') {\n        arr.push({\n          name: key,\n          value: value,\n        });\n      }\n    }\n    return arr;\n  };\n\n  render() {\n    let { data, pressedData } = this.state;\n    return (\n      <Box\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          flex: 1,\n        }}\n      >\n        {data.map((item) => this.getItems(item))}\n      </Box>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}