{"ast":null,"code":"var _jsxFileName = \"/Users/pascalstoppelkamp/develop/React/marktabfrage/src/components/Table.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Typography } from '@material-ui/core';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createMuiTheme({\n  typography: {\n    subtitle1: {\n      fontSize: 12\n    },\n    body1: {\n      fontWeight: 500\n    },\n    button: {\n      fontStyle: 'italic'\n    }\n  }\n});\nexport default class DataTable extends React.Component {\n  createData(name, calories, fat, carbs, protein) {\n    return {\n      name,\n      calories,\n      fat,\n      carbs,\n      protein\n    };\n  }\n\n  render() {\n    const rows = [this.createData('Wasserstoff', 'Einspeiseleistung', 'MWh/hth', 24, 4.0), this.createData('Wasserstoff', 'Einspeisemenge pro Jahr', 'MWh/hth', 24, 4.0), this.createData('Wasserstoff', 'Ausspeiseleistung', 'MWh/hth', 24, 4.0), this.createData('Wasserstoff', 'Ausspeisemenge pro Jahr', 'MWh/hth', 24, 4.0), this.createData('Synthetisches Methan', 'Einspeiseleistung', 'MWh/hth', 24, 4.0), this.createData('Synthetisches Methan', 'Einspeisemenge pro Jahr', 'MWh/hth', 24, 4.0), this.createData('Biomethan', 'Einspeiseleistung', 'MWh/hth', 24, 4.0), this.createData('Biomethan', 'Einspeisemenge pro Jahr', 'MWh/hth', 24, 4.0), this.createData('Bei geplanter Elektrolyse:', 'Elektrische Leistung der Anlage', 'MWh/hth', 24, 4.0)];\n    return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          \"aria-label\": \"simple table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  style: {\n                    fontSize: 22\n                  },\n                  children: \"Punktart\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 44\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Ein-/Ausspeisung (Bitte Angaben als Brennwert)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Einheit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: row.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: row.calories\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: row.fat\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: row.carbs\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: row.protein\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 37\n              }, this)]\n            }, row.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/pascalstoppelkamp/develop/React/marktabfrage/src/components/Table.js"],"names":["React","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Typography","createMuiTheme","ThemeProvider","theme","typography","subtitle1","fontSize","body1","fontWeight","button","fontStyle","DataTable","Component","createData","name","calories","fat","carbs","protein","render","rows","map","row"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Typography } from '@material-ui/core';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\n\nconst theme = createMuiTheme({\n    typography: {\n        subtitle1: {\n            fontSize: 12,\n        },\n        body1: {\n            fontWeight: 500,\n        },\n        button: {\n            fontStyle: 'italic',\n        },\n    },\n});\n\nexport default class DataTable extends React.Component {\n    createData(name, calories, fat, carbs, protein) {\n        return { name, calories, fat, carbs, protein };\n    }\n    render() {\n        const rows = [\n            this.createData('Wasserstoff', 'Einspeiseleistung', 'MWh/hth', 24, 4.0),\n            this.createData('Wasserstoff', 'Einspeisemenge pro Jahr', 'MWh/hth', 24, 4.0),\n            this.createData('Wasserstoff', 'Ausspeiseleistung', 'MWh/hth', 24, 4.0),\n            this.createData('Wasserstoff', 'Ausspeisemenge pro Jahr', 'MWh/hth', 24, 4.0),\n            this.createData('Synthetisches Methan', 'Einspeiseleistung', 'MWh/hth', 24, 4.0),\n            this.createData('Synthetisches Methan', 'Einspeisemenge pro Jahr', 'MWh/hth', 24, 4.0),\n            this.createData('Biomethan', 'Einspeiseleistung', 'MWh/hth', 24, 4.0),\n            this.createData('Biomethan', 'Einspeisemenge pro Jahr', 'MWh/hth', 24, 4.0),\n            this.createData('Bei geplanter Elektrolyse:', 'Elektrische Leistung der Anlage', 'MWh/hth', 24, 4.0),\n        ];\n        return (\n            <ThemeProvider theme={theme}>\n                <TableContainer component={Paper}>\n                    <Table aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell><Typography style={{ fontSize: 22 }}>Punktart</Typography></TableCell>\n                                <TableCell >Ein-/Ausspeisung (Bitte Angaben als Brennwert)</TableCell>\n                                <TableCell >Einheit</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {rows.map((row) => (\n                                <TableRow key={row.name}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {row.name}\n                                    </TableCell>\n                                    <TableCell >{row.calories}</TableCell>\n                                    <TableCell >{row.fat}</TableCell>\n                                    <TableCell >{row.carbs}</TableCell>\n                                    <TableCell >{row.protein}</TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </ThemeProvider>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}