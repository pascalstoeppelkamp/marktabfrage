{"ast":null,"code":"var _jsxFileName = \"/Users/pascalstoppelkamp/develop/React/marktabfrage/src/components/FormComponent/CheckBox.js\";\nimport React, { Component } from 'react';\nimport { Box, Checkbox, FormControlLabel, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class CheckBox extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this._SetCheckBox = (value, data) => {\n      value = value.target.value;\n\n      if (data.value[value]) {\n        data.value[value] = false;\n      } else {\n        data.value[value] = true;\n      }\n\n      this.props.setAllData(data);\n    };\n\n    this.checkbox = (values, published, key, data) => {\n      let arr = [];\n      values.forEach(item => {\n        arr.push( /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: item,\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            color: \"primary\",\n            value: item,\n            onClick: value => this._SetCheckBox(value, data)\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 30\n          }, this),\n          label: /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              fontSize: 12\n            },\n            children: item\n          }, `${key}Typography`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 28\n          }, this),\n          labelPlacement: \"end\",\n          style: {\n            paddingLeft: 10,\n            paddingTop: 1,\n            flex: 1\n          }\n        }, `${key}FormControlLabel`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }, this));\n      });\n      return /*#__PURE__*/_jsxDEV(Box, {\n        border: 1,\n        borderColor: \"grey.500\",\n        style: {\n          width: '100%',\n          display: 'flex',\n          backgroundColor: published ? \"#FFE4C470\" : \"#FFFFFF\",\n          justifyContent: \"space-evenly\"\n        },\n        children: arr\n      }, `${key}Box`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 16\n      }, this);\n    };\n  }\n\n  render() {\n    let {\n      values,\n      published,\n      id,\n      data\n    } = this.props;\n    let key = id;\n    return this.checkbox(values, published, key, data);\n  }\n\n}","map":{"version":3,"sources":["/Users/pascalstoppelkamp/develop/React/marktabfrage/src/components/FormComponent/CheckBox.js"],"names":["React","Component","Box","Checkbox","FormControlLabel","Typography","CheckBox","_SetCheckBox","value","data","target","props","setAllData","checkbox","values","published","key","arr","forEach","item","push","fontSize","paddingLeft","paddingTop","flex","width","display","backgroundColor","justifyContent","render","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,QAAd,EAAwBC,gBAAxB,EAA0CC,UAA1C,QAA4D,mBAA5D;;AACA,eAAe,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAC5CM,YAD4C,GAC7B,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAC5BD,MAAAA,KAAK,GAAGA,KAAK,CAACE,MAAN,CAAaF,KAArB;;AACA,UAAIC,IAAI,CAACD,KAAL,CAAWA,KAAX,CAAJ,EAAuB;AACnBC,QAAAA,IAAI,CAACD,KAAL,CAAWA,KAAX,IAAoB,KAApB;AACH,OAFD,MAGK;AACDC,QAAAA,IAAI,CAACD,KAAL,CAAWA,KAAX,IAAoB,IAApB;AACH;;AACD,WAAKG,KAAL,CAAWC,UAAX,CAAsBH,IAAtB;AACH,KAV2C;;AAAA,SAW5CI,QAX4C,GAWjC,CAACC,MAAD,EAASC,SAAT,EAAoBC,GAApB,EAAyBP,IAAzB,KAAkC;AACzC,UAAIQ,GAAG,GAAG,EAAV;AACAH,MAAAA,MAAM,CAACI,OAAP,CAAgBC,IAAD,IAAU;AACrBF,QAAAA,GAAG,CAACG,IAAJ,eACI,QAAC,gBAAD;AAEI,UAAA,KAAK,EAAED,IAFX;AAGI,UAAA,OAAO,eAAE,QAAC,QAAD;AAAU,YAAA,KAAK,EAAC,SAAhB;AAAoC,YAAA,KAAK,EAAEA,IAA3C;AAAiD,YAAA,OAAO,EAAGX,KAAD,IAAW,KAAKD,YAAL,CAAkBC,KAAlB,EAAyBC,IAAzB;AAArE,aAA+BO,GAA/B;AAAA;AAAA;AAAA;AAAA,kBAHb;AAII,UAAA,KAAK,eAAE,QAAC,UAAD;AAAqC,YAAA,KAAK,EAAE;AAAEK,cAAAA,QAAQ,EAAE;AAAZ,aAA5C;AAAA,sBAA+DF;AAA/D,aAAkB,GAAEH,GAAI,YAAxB;AAAA;AAAA;AAAA;AAAA,kBAJX;AAKI,UAAA,cAAc,EAAC,KALnB;AAMI,UAAA,KAAK,EAAE;AAAEM,YAAAA,WAAW,EAAE,EAAf;AAAmBC,YAAAA,UAAU,EAAE,CAA/B;AAAkCC,YAAAA,IAAI,EAAE;AAAxC;AANX,WACU,GAAER,GAAI,kBADhB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAUH,OAXD;AAYA,0BAAO,QAAC,GAAD;AAAuB,QAAA,MAAM,EAAE,CAA/B;AAAkC,QAAA,WAAW,EAAC,UAA9C;AAAyD,QAAA,KAAK,EAAE;AAAES,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,OAAO,EAAE,MAA1B;AAAkCC,UAAAA,eAAe,EAAEZ,SAAS,GAAG,WAAH,GAAiB,SAA7E;AAAwFa,UAAAA,cAAc,EAAE;AAAxG,SAAhE;AAAA,kBACFX;AADE,SAAW,GAAED,GAAI,KAAjB;AAAA;AAAA;AAAA;AAAA,cAAP;AAGH,KA5B2C;AAAA;;AA6B5Ca,EAAAA,MAAM,GAAG;AACL,QAAI;AAAEf,MAAAA,MAAF;AAAUC,MAAAA,SAAV;AAAqBe,MAAAA,EAArB;AAAyBrB,MAAAA;AAAzB,QAAkC,KAAKE,KAA3C;AACA,QAAIK,GAAG,GAAGc,EAAV;AACA,WACI,KAAKjB,QAAL,CAAcC,MAAd,EAAsBC,SAAtB,EAAiCC,GAAjC,EAAsCP,IAAtC,CADJ;AAGH;;AAnC2C","sourcesContent":["import React, { Component } from 'react'\nimport { Box, Checkbox, FormControlLabel, Typography } from '@material-ui/core';\nexport default class CheckBox extends Component {\n    _SetCheckBox = (value, data) => {\n        value = value.target.value;\n        if (data.value[value]) {\n            data.value[value] = false;\n        }\n        else {\n            data.value[value] = true\n        }\n        this.props.setAllData(data)\n    }\n    checkbox = (values, published, key, data) => {\n        let arr = []\n        values.forEach((item) => {\n            arr.push(\n                <FormControlLabel\n                    key={`${key}FormControlLabel`}\n                    value={item}\n                    control={<Checkbox color=\"primary\" key={key} value={item} onClick={(value) => this._SetCheckBox(value, data)} />}\n                    label={<Typography key={`${key}Typography`} style={{ fontSize: 12 }}>{item}</Typography>}\n                    labelPlacement=\"end\"\n                    style={{ paddingLeft: 10, paddingTop: 1, flex: 1 }}\n                />\n            )\n        })\n        return <Box key={`${key}Box`} border={1} borderColor=\"grey.500\" style={{ width: '100%', display: 'flex', backgroundColor: published ? \"#FFE4C470\" : \"#FFFFFF\", justifyContent: \"space-evenly\" }}>\n            {arr}\n        </Box>\n    }\n    render() {\n        let { values, published, id, data } = this.props;\n        let key = id;\n        return (\n            this.checkbox(values, published, key, data)\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}